#Move_base params 
recovery_behaviors: 
  - name: aggressive_reset
    type: clear_costmap_recovery/ClearCostmapRecovery

# Rate that controller will send command vels
controller_frequency: 15.0

# how long planner will wait in secs before space-clearing operations are performed
planner_patience: 5.0

# how long controller will wait to find a valid control
controller_patience: 3

# rate in hz to run global planning loop. if 0, will only run when a new goal is recevied or when local planner reports plan is blocked
planner_frequency: 1

# max times to try before recovery behavior
max_planning_retries: 5

recovery_behaviour_enabled: true

# Global Planner params
GlobalPlanner:
  # if using obstacle layer, must set track_unknown_space to true
  allow_unknown: false 
  
  default_tolerance: 5 
  
  # visualize potential area
  visualize_potential: true  

  # otherwise a*
  use_dijkstra: false
  
  # use quadratic approx for potentials, otherwise use simpler
  use_quadratic: false

  # follow grid boundaries, otherwise gradient descent
  use_grid_path: true

  # use old style navfn behaviors
  old_navfn_behavior: false



TebLocalPlannerROS:

 odom_topic: odom
 map_frame: /odom
    
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 2.0
 feasibility_check_no_poses: 5
 force_reinit_ne_goal_dist: 1.0
 publish_feedback: True
 
    
 # Robot
         
 max_vel_x: 2
 max_vel_x_backwards: 1.0
 max_vel_theta: 2.5
 acc_lim_x: 20.0
 acc_lim_theta: 22
 min_turning_radius: 0.0
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "point"
   radius: 0.2 # for type "circular"
   line_start: [-0.3, 0.0] # for type "line"
   line_end: [0.3, 0.0] # for type "line"
   front_offset: 0.2 # for type "two_circles"
   front_radius: 0.2 # for type "two_circles"
   rear_offset: 0.2 # for type "two_circles"
   rear_radius: 0.2 # for type "two_circles"
   vertices: [[-0.27, -0.3], [0.93, -0.3], [0.93, 0.3], [-0.27, 0.3]] # for type "polygon"

 # GoalTolerance
    
 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.1
 free_goal_vel: False
    
 # Obstacles
    
 min_obstacle_dist: 0.55
 include_costmap_obstacles: False
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # Optimization
    
 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 3
 weight_kinematics_turning_radius: 1
 weight_optimaltime: 1
 weight_obstacle: 50
 weight_dynamic_obstacle: 10 # not in use yet
 alternative_time_cost: False # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
