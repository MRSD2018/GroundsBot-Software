#!/usr/bin/env python
# Cliff detector configuration file

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                    Type  Reconf. level  Description                               Default    Min   Max
gen.add("output_frame_id",      str_t,      0,  "Frame id for the output laserscan.",         "camera_depth_frame")
gen.add("rate",                 int_t,      0,  "Data processing frequency  (Hz).",           10, 1, 30)
gen.add("range_min",            double_t,   0,  "Minimum sensor range (in meters).",          0.5, 0.2, 10.0)
gen.add("range_max",            double_t,   0,  "Maximum sensor range (in meters).",          5.0, 0.5, 10.0)
gen.add("sensor_mount_height",  double_t,   0,  "Height of kinect mount (m).",                0.4, 0.0, 10.0)
gen.add("sensor_tilt_angle",    double_t,   0,  "Sensor tilt angle (degrees).",               0.0, -30.0, 30.0)
gen.add("publish_depth",        bool_t,     0,  "Determines if depth should be republished.", False)
gen.add("cam_model_update",     bool_t,     0,  "If continously camera data update.",         True)

gen.add("used_depth_height",    int_t,      0,  "Used depth height from img bottom (px).",    400, 1, 1000)
gen.add("block_size",           int_t,      0,  "Square block (subimage) size (px).",         16, 1, 100)
gen.add("block_points_thresh",  int_t,      0,  "Block stairs points threshold (px).",        3, 1, 1000)
gen.add("depth_img_step_row",   int_t,      0,  "Rows step in depth processing (px).",        8, 1, 100)
gen.add("depth_img_step_col",   int_t,      0,  "Columns step in depth processing (px).",     8, 1, 100)
gen.add("ground_margin",        double_t,   0,  "Ground margin in meters.",                   0.05, 0.0, 1.0)

exit(gen.generate("cliff_detector", "cliff_detector", "CliffDetector"))
